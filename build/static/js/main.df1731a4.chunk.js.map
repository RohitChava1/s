{"version":3,"sources":["transactioncard.jsx","Appbar.jsx","App.js","index.js"],"names":["Transactioncard","props","console","log","startDate","date","Date","toLocaleString","weekday","day","year","month","hour","minute","second","className","direction","style","display","flexDirection","width","amount","type","fontSize","paddingRight","alignSelf","status","alignContent","textAlign","id","Button","variant","size","marginLeft","fontWeight","paddingTop","useStyles","makeStyles","theme","root","flexGrow","menuButton","marginRight","spacing","title","ButtonAppBar","classes","AppBar","position","Toolbar","IconButton","edge","color","Avatar","border","margin","alt","src","Typography","App","prevdate","useState","data","setdata","useEffect","fetch","then","response","json","length","transactions","map","datas","i","d","flex","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.df1731a4.chunk.js","sourcesContent":["import React from 'react'\r\nimport {Button, Card} from\"@material-ui/core\"\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport \"./trans.css\";\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\n\r\n\r\nfunction Transactioncard({props}) {\r\n    // const te\r\n \r\n   console.log(props.startDate)\r\n   var date=  new Date(props.startDate).toLocaleString('en-US', {\r\n    weekday: 'short', // long, short, narrow\r\n    day: 'numeric', // numeric, 2-digit\r\n    year: 'numeric', // numeric, 2-digit\r\n    month: 'long', // numeric, 2-digit, long, short, narrow\r\n    hour: 'numeric', // numeric, 2-digit\r\n    minute: 'numeric', // numeric, 2-digit\r\n    second: 'numeric', // numeric, 2-digit\r\n})\r\n    return (\r\n        \r\n        <div className={props.direction===1?\"right\":\"left\"} style={{display:\"flex\"\r\n        ,flexDirection:\"column\",width:\"100%\"}}>\r\n        <div className=\"cardd\">\r\n            \r\n           <div className=\"header\">\r\n               <div style={{\"font-size\": \"x-large\", \"font-weight\": 900}}>{props.amount}</div>\r\n               <div>\r\n                  {props.type===1? <CheckIcon style={{fontSize:15,paddingRight:5,alignSelf:'end'}}/>:\"\"}\r\n                   <text style={{alignSelf:'start',fontSize:\"small\"}}>{props.type===1?\"you paid\":props.direction===1?\"you requested\":\"Request Recieved\"}</text>\r\n                </div>\r\n            </div>\r\n            <div className=\"header\">\r\n              { props.status===2?(<div style={{\"font-size\": \"x-large\", \"font-weight\": 900,display:'flex',flexDirection:\"column\",alignContent:\"flex-start\"}}>\r\n                   <div style={{    \"font-size\": \"small\",textAlign:\"start\"}}>Transaction id</div>\r\n                 <div style={{    \"font-size\": \"small\",textAlign:\"start\"}}>{props.id}</div>\r\n                   </div>):props.direction===1?(<><Button variant=\"outlined\" size =\"small\"> Cancel</Button></>):(<div style={{display:\"flex\",flexDirection:\"row\"}} ><Button variant=\"outlined\" size =\"small\"> Pay</Button><Button variant=\"outlined\" size =\"small\" style={{marginLeft:10}}> Decline</Button></div>)}\r\n               <div>\r\n                   <NavigateNextIcon fontSize={'large'} style={{fontWeight:\"300\", paddingRight:5,alignSelf:'end'}}/>\r\n                   \r\n                </div>\r\n            </div>\r\n         \r\n        </div>\r\n        <div style={{fontSize:'12px',paddingTop:10}}>{ date}</div>\r\n      \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Transactioncard\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Avatar from \"@material-ui/core/Avatar\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  menuButton: {\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  title: {\r\n    flexGrow: 1,\r\n  },\r\n}));\r\n\r\nexport default function ButtonAppBar() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n            <ArrowBackIosIcon />\r\n          </IconButton>\r\n          <div>\r\n          <Avatar\r\n              style={{ border: \"2px solid gray\", margin: 10 }}\r\n              alt=\"JohnDoe\"\r\n              src=\"D\"\r\n        />\r\n          </div>\r\n          <div style={{alignSelf:'auto',flexDirection:\"column\"}}>\r\n            <Typography>JohnDoe</Typography>\r\n            <Typography style={{alignSelf:'start'}}>001</Typography>\r\n          </div>\r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport Transactioncard from './transactioncard';\nimport ButtonAppBar from './Appbar';\n\nfunction App() {\n const [data, setdata] = useState([])\nvar prevdate;\n  useEffect(()=>{\n    \n    fetch('https://dev.onebanc.ai/assignment.asmx/GetTransactionHistory?userId=1&recipientId=2')\n        .then(response => response.json())\n        .then(data =>\n          setdata(data));\n\n\n  },[])\n  if(data.length===0){\n    return(<>loading</>)\n  }\n  else{  return (\n    <div className=\"App\">\n      <ButtonAppBar/>\n\n      <main>\n        \n      {  data.transactions.map((datas,i)=>{console.log(i,datas,\"sa\") \n       var d=new Date(datas.startDate).toLocaleString('en-US', {\n        // long, short, narrow\n        day: 'numeric', // numeric, 2-digit\n      \n    })\n      if(i===0){\n        prevdate=d\n        return(<><div className=\"Datewise\"><hr/><div style={{flex:1,}}>{new Date(datas.startDate).toLocaleString('en-US', {\n\n          day: 'numeric', \n          month: 'long',// numeric, 2-digit\n          year: 'numeric', // numeric, 2-digit\n           // numeric, 2-digit, long, short, narrow\n         })}</div><hr/></div>\n          <Transactioncard props= {datas}/>\n          \n         </>)}\n         else if(prevdate!==d)\n         {  prevdate=d;\n           return(<><div className=\"Datewise\"><hr/><div style={{flex:1,}}>{new Date(datas.startDate).toLocaleString('en-US', {\n\n          day: 'numeric', \n          month: 'long',// numeric, 2-digit\n          year: 'numeric', // numeric, 2-digit\n           // numeric, 2-digit, long, short, narrow\n         })}</div><hr/></div>\n          <Transactioncard props= {datas}/>\n         </>)}\n         else{\n          prevdate=d;\n           return(<>\n\n      <Transactioncard props= {datas}/></>\n        )}})}\n      {/* <div className=\"Datewise\"><hr/><div style={{flex:1,}}>23-jan</div><hr/></div> */}\n\n</main>\n\n      \n\n     \n    </div>\n  );}\n\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}